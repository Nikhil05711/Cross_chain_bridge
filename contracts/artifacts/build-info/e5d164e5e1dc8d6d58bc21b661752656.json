{
	"id": "e5d164e5e1dc8d6d58bc21b661752656",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Blacklist.sol": {
				"content": "//  SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\nimport \"./utils/Ownable.sol\";\r\n\r\ncontract Blacklist is Ownable {\r\n    mapping(address => bool) public isBlacklisted;\r\n\r\n    function addBlacklist(address _user) public onlyOwner {\r\n        require(!isBlacklisted[_user], \"Error: User already blacklisted\");\r\n        isBlacklisted[_user] = true;\r\n    }\r\n\r\n    function removeFromBlacklist(address _user) public onlyOwner {\r\n        require(isBlacklisted[_user], \"Error: User already whitelisted\");\r\n        isBlacklisted[_user] = false;\r\n    }\r\n\r\n    function isUserBlacklisted(address _user) private view returns (bool) {\r\n        return isBlacklisted[_user];\r\n    }\r\n}\r\n"
			},
			"contracts/utils/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.17;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.17;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Blacklist.sol": {
				"Blacklist": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "addBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "removeFromBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Blacklist.sol\":93:678  contract Blacklist is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/utils/Ownable.sol\":983:1015  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"contracts/utils/Ownable.sol\":1002:1014  _msgSender() */\n  tag_5\n    /* \"contracts/utils/Ownable.sol\":1002:1012  _msgSender */\n  shl(0x20, tag_6)\n    /* \"contracts/utils/Ownable.sol\":1002:1014  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"contracts/utils/Ownable.sol\":983:1001  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"contracts/utils/Ownable.sol\":983:1015  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/Blacklist.sol\":93:678  contract Blacklist is Ownable {... */\n  jump(tag_8)\n    /* \"contracts/utils/Context.sol\":657:755  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"contracts/utils/Context.sol\":710:717  address */\n  0x00\n    /* \"contracts/utils/Context.sol\":737:747  msg.sender */\n  caller\n    /* \"contracts/utils/Context.sol\":730:747  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/utils/Context.sol\":657:755  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/utils/Ownable.sol\":2566:2757  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"contracts/utils/Ownable.sol\":2640:2656  address oldOwner */\n  0x00\n    /* \"contracts/utils/Ownable.sol\":2659:2665  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/utils/Ownable.sol\":2640:2665  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/utils/Ownable.sol\":2685:2693  newOwner */\n  dup2\n    /* \"contracts/utils/Ownable.sol\":2676:2682  _owner */\n  0x00\n  dup1\n    /* \"contracts/utils/Ownable.sol\":2676:2693  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/utils/Ownable.sol\":2740:2748  newOwner */\n  dup2\n    /* \"contracts/utils/Ownable.sol\":2709:2749  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/utils/Ownable.sol\":2730:2738  oldOwner */\n  dup2\n    /* \"contracts/utils/Ownable.sol\":2709:2749  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/utils/Ownable.sol\":2629:2757  {... */\n  pop\n    /* \"contracts/utils/Ownable.sol\":2566:2757  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Blacklist.sol\":93:678  contract Blacklist is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Blacklist.sol\":93:678  contract Blacklist is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x537df3b6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9cfe42da\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Blacklist.sol\":368:551  function removeFromBlacklist(address _user) public onlyOwner {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/utils/Ownable.sol\":1910:2013  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/utils/Ownable.sol\":1262:1349  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Blacklist.sol\":184:360  function addBlacklist(address _user) public onlyOwner {... */\n    tag_6:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/utils/Ownable.sol\":2168:2406  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/Blacklist.sol\":130:175  mapping(address => bool) public isBlacklisted */\n    tag_8:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Blacklist.sol\":368:551  function removeFromBlacklist(address _user) public onlyOwner {... */\n    tag_12:\n        /* \"contracts/utils/Ownable.sol\":1148:1161  _checkOwner() */\n      tag_31\n        /* \"contracts/utils/Ownable.sol\":1148:1159  _checkOwner */\n      tag_32\n        /* \"contracts/utils/Ownable.sol\":1148:1161  _checkOwner() */\n      jump\t// in\n    tag_31:\n        /* \"contracts/Blacklist.sol\":448:461  isBlacklisted */\n      0x01\n        /* \"contracts/Blacklist.sol\":448:468  isBlacklisted[_user] */\n      0x00\n        /* \"contracts/Blacklist.sol\":462:467  _user */\n      dup3\n        /* \"contracts/Blacklist.sol\":448:468  isBlacklisted[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Blacklist.sol\":440:504  require(isBlacklisted[_user], \"Error: User already whitelisted\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"contracts/Blacklist.sol\":538:543  false */\n      0x00\n        /* \"contracts/Blacklist.sol\":515:528  isBlacklisted */\n      0x01\n        /* \"contracts/Blacklist.sol\":515:535  isBlacklisted[_user] */\n      0x00\n        /* \"contracts/Blacklist.sol\":529:534  _user */\n      dup4\n        /* \"contracts/Blacklist.sol\":515:535  isBlacklisted[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Blacklist.sol\":515:543  isBlacklisted[_user] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Blacklist.sol\":368:551  function removeFromBlacklist(address _user) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/utils/Ownable.sol\":1910:2013  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n        /* \"contracts/utils/Ownable.sol\":1148:1161  _checkOwner() */\n      tag_38\n        /* \"contracts/utils/Ownable.sol\":1148:1159  _checkOwner */\n      tag_32\n        /* \"contracts/utils/Ownable.sol\":1148:1161  _checkOwner() */\n      jump\t// in\n    tag_38:\n        /* \"contracts/utils/Ownable.sol\":1975:2005  _transferOwnership(address(0)) */\n      tag_40\n        /* \"contracts/utils/Ownable.sol\":2002:2003  0 */\n      0x00\n        /* \"contracts/utils/Ownable.sol\":1975:1993  _transferOwnership */\n      tag_41\n        /* \"contracts/utils/Ownable.sol\":1975:2005  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_40:\n        /* \"contracts/utils/Ownable.sol\":1910:2013  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/utils/Ownable.sol\":1262:1349  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"contracts/utils/Ownable.sol\":1308:1315  address */\n      0x00\n        /* \"contracts/utils/Ownable.sol\":1335:1341  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/Ownable.sol\":1328:1341  return _owner */\n      swap1\n      pop\n        /* \"contracts/utils/Ownable.sol\":1262:1349  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Blacklist.sol\":184:360  function addBlacklist(address _user) public onlyOwner {... */\n    tag_21:\n        /* \"contracts/utils/Ownable.sol\":1148:1161  _checkOwner() */\n      tag_44\n        /* \"contracts/utils/Ownable.sol\":1148:1159  _checkOwner */\n      tag_32\n        /* \"contracts/utils/Ownable.sol\":1148:1161  _checkOwner() */\n      jump\t// in\n    tag_44:\n        /* \"contracts/Blacklist.sol\":258:271  isBlacklisted */\n      0x01\n        /* \"contracts/Blacklist.sol\":258:278  isBlacklisted[_user] */\n      0x00\n        /* \"contracts/Blacklist.sol\":272:277  _user */\n      dup3\n        /* \"contracts/Blacklist.sol\":258:278  isBlacklisted[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Blacklist.sol\":257:278  !isBlacklisted[_user] */\n      iszero\n        /* \"contracts/Blacklist.sol\":249:314  require(!isBlacklisted[_user], \"Error: User already blacklisted\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/Blacklist.sol\":348:352  true */\n      0x01\n        /* \"contracts/Blacklist.sol\":325:338  isBlacklisted */\n      dup1\n        /* \"contracts/Blacklist.sol\":325:345  isBlacklisted[_user] */\n      0x00\n        /* \"contracts/Blacklist.sol\":339:344  _user */\n      dup4\n        /* \"contracts/Blacklist.sol\":325:345  isBlacklisted[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Blacklist.sol\":325:352  isBlacklisted[_user] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Blacklist.sol\":184:360  function addBlacklist(address _user) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/utils/Ownable.sol\":2168:2406  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n        /* \"contracts/utils/Ownable.sol\":1148:1161  _checkOwner() */\n      tag_50\n        /* \"contracts/utils/Ownable.sol\":1148:1159  _checkOwner */\n      tag_32\n        /* \"contracts/utils/Ownable.sol\":1148:1161  _checkOwner() */\n      jump\t// in\n    tag_50:\n        /* \"contracts/utils/Ownable.sol\":2291:2292  0 */\n      0x00\n        /* \"contracts/utils/Ownable.sol\":2271:2293  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/Ownable.sol\":2271:2279  newOwner */\n      dup2\n        /* \"contracts/utils/Ownable.sol\":2271:2293  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/utils/Ownable.sol\":2249:2359  require(... */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"contracts/utils/Ownable.sol\":2370:2398  _transferOwnership(newOwner) */\n      tag_55\n        /* \"contracts/utils/Ownable.sol\":2389:2397  newOwner */\n      dup2\n        /* \"contracts/utils/Ownable.sol\":2370:2388  _transferOwnership */\n      tag_41\n        /* \"contracts/utils/Ownable.sol\":2370:2398  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_55:\n        /* \"contracts/utils/Ownable.sol\":2168:2406  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Blacklist.sol\":130:175  mapping(address => bool) public isBlacklisted */\n    tag_27:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/utils/Ownable.sol\":1427:1559  function _checkOwner() internal view virtual {... */\n    tag_32:\n        /* \"contracts/utils/Ownable.sol\":1502:1514  _msgSender() */\n      tag_57\n        /* \"contracts/utils/Ownable.sol\":1502:1512  _msgSender */\n      tag_58\n        /* \"contracts/utils/Ownable.sol\":1502:1514  _msgSender() */\n      jump\t// in\n    tag_57:\n        /* \"contracts/utils/Ownable.sol\":1491:1514  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/Ownable.sol\":1491:1498  owner() */\n      tag_59\n        /* \"contracts/utils/Ownable.sol\":1491:1496  owner */\n      tag_16\n        /* \"contracts/utils/Ownable.sol\":1491:1498  owner() */\n      jump\t// in\n    tag_59:\n        /* \"contracts/utils/Ownable.sol\":1491:1514  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/utils/Ownable.sol\":1483:1551  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"contracts/utils/Ownable.sol\":1427:1559  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/utils/Ownable.sol\":2566:2757  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_41:\n        /* \"contracts/utils/Ownable.sol\":2640:2656  address oldOwner */\n      0x00\n        /* \"contracts/utils/Ownable.sol\":2659:2665  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/Ownable.sol\":2640:2665  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/utils/Ownable.sol\":2685:2693  newOwner */\n      dup2\n        /* \"contracts/utils/Ownable.sol\":2676:2682  _owner */\n      0x00\n      dup1\n        /* \"contracts/utils/Ownable.sol\":2676:2693  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/utils/Ownable.sol\":2740:2748  newOwner */\n      dup2\n        /* \"contracts/utils/Ownable.sol\":2709:2749  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/Ownable.sol\":2730:2738  oldOwner */\n      dup2\n        /* \"contracts/utils/Ownable.sol\":2709:2749  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/utils/Ownable.sol\":2629:2757  {... */\n      pop\n        /* \"contracts/utils/Ownable.sol\":2566:2757  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/utils/Context.sol\":657:755  function _msgSender() internal view virtual returns (address) {... */\n    tag_58:\n        /* \"contracts/utils/Context.sol\":710:717  address */\n      0x00\n        /* \"contracts/utils/Context.sol\":737:747  msg.sender */\n      caller\n        /* \"contracts/utils/Context.sol\":730:747  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/utils/Context.sol\":657:755  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_66:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_68:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_69:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_90\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_68\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_70:\n        /* \"#utility.yul\":641:665   */\n      tag_92\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_69\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_93\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_93:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_71:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_95\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_70\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_11:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_98\n      tag_66\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":917:1036   */\n    tag_97:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_99\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_71\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_72:\n        /* \"#utility.yul\":1263:1287   */\n      tag_101\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_69\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_18:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_103\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_72\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1618   */\n    tag_73:\n        /* \"#utility.yul\":1562:1569   */\n      0x00\n        /* \"#utility.yul\":1605:1610   */\n      dup2\n        /* \"#utility.yul\":1598:1611   */\n      iszero\n        /* \"#utility.yul\":1591:1612   */\n      iszero\n        /* \"#utility.yul\":1580:1612   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1624:1733   */\n    tag_74:\n        /* \"#utility.yul\":1705:1726   */\n      tag_106\n        /* \"#utility.yul\":1720:1725   */\n      dup2\n        /* \"#utility.yul\":1705:1726   */\n      tag_73\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1700:1703   */\n      dup3\n        /* \"#utility.yul\":1693:1727   */\n      mstore\n        /* \"#utility.yul\":1624:1733   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1949   */\n    tag_29:\n        /* \"#utility.yul\":1826:1830   */\n      0x00\n        /* \"#utility.yul\":1864:1866   */\n      0x20\n        /* \"#utility.yul\":1853:1862   */\n      dup3\n        /* \"#utility.yul\":1849:1867   */\n      add\n        /* \"#utility.yul\":1841:1867   */\n      swap1\n      pop\n        /* \"#utility.yul\":1877:1942   */\n      tag_108\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1877:1942   */\n      tag_74\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1739:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2124   */\n    tag_75:\n        /* \"#utility.yul\":2039:2050   */\n      0x00\n        /* \"#utility.yul\":2073:2079   */\n      dup3\n        /* \"#utility.yul\":2068:2071   */\n      dup3\n        /* \"#utility.yul\":2061:2080   */\n      mstore\n        /* \"#utility.yul\":2113:2117   */\n      0x20\n        /* \"#utility.yul\":2108:2111   */\n      dup3\n        /* \"#utility.yul\":2104:2118   */\n      add\n        /* \"#utility.yul\":2089:2118   */\n      swap1\n      pop\n        /* \"#utility.yul\":1955:2124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2130:2311   */\n    tag_76:\n        /* \"#utility.yul\":2270:2303   */\n      0x4572726f723a205573657220616c72656164792077686974656c697374656400\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup3\n        /* \"#utility.yul\":2254:2268   */\n      add\n        /* \"#utility.yul\":2247:2304   */\n      mstore\n        /* \"#utility.yul\":2130:2311   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2317:2683   */\n    tag_77:\n        /* \"#utility.yul\":2459:2462   */\n      0x00\n        /* \"#utility.yul\":2480:2547   */\n      tag_112\n        /* \"#utility.yul\":2544:2546   */\n      0x1f\n        /* \"#utility.yul\":2539:2542   */\n      dup4\n        /* \"#utility.yul\":2480:2547   */\n      tag_75\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2473:2547   */\n      swap2\n      pop\n        /* \"#utility.yul\":2556:2649   */\n      tag_113\n        /* \"#utility.yul\":2645:2648   */\n      dup3\n        /* \"#utility.yul\":2556:2649   */\n      tag_76\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2674:2676   */\n      0x20\n        /* \"#utility.yul\":2669:2672   */\n      dup3\n        /* \"#utility.yul\":2665:2677   */\n      add\n        /* \"#utility.yul\":2658:2677   */\n      swap1\n      pop\n        /* \"#utility.yul\":2317:2683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2689:3108   */\n    tag_36:\n        /* \"#utility.yul\":2855:2859   */\n      0x00\n        /* \"#utility.yul\":2893:2895   */\n      0x20\n        /* \"#utility.yul\":2882:2891   */\n      dup3\n        /* \"#utility.yul\":2878:2896   */\n      add\n        /* \"#utility.yul\":2870:2896   */\n      swap1\n      pop\n        /* \"#utility.yul\":2942:2951   */\n      dup2\n        /* \"#utility.yul\":2936:2940   */\n      dup2\n        /* \"#utility.yul\":2932:2952   */\n      sub\n        /* \"#utility.yul\":2928:2929   */\n      0x00\n        /* \"#utility.yul\":2917:2926   */\n      dup4\n        /* \"#utility.yul\":2913:2930   */\n      add\n        /* \"#utility.yul\":2906:2953   */\n      mstore\n        /* \"#utility.yul\":2970:3101   */\n      tag_115\n        /* \"#utility.yul\":3096:3100   */\n      dup2\n        /* \"#utility.yul\":2970:3101   */\n      tag_77\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2962:3101   */\n      swap1\n      pop\n        /* \"#utility.yul\":2689:3108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3114:3295   */\n    tag_78:\n        /* \"#utility.yul\":3254:3287   */\n      0x4572726f723a205573657220616c726561647920626c61636b6c697374656400\n        /* \"#utility.yul\":3250:3251   */\n      0x00\n        /* \"#utility.yul\":3242:3248   */\n      dup3\n        /* \"#utility.yul\":3238:3252   */\n      add\n        /* \"#utility.yul\":3231:3288   */\n      mstore\n        /* \"#utility.yul\":3114:3295   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3301:3667   */\n    tag_79:\n        /* \"#utility.yul\":3443:3446   */\n      0x00\n        /* \"#utility.yul\":3464:3531   */\n      tag_118\n        /* \"#utility.yul\":3528:3530   */\n      0x1f\n        /* \"#utility.yul\":3523:3526   */\n      dup4\n        /* \"#utility.yul\":3464:3531   */\n      tag_75\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":3457:3531   */\n      swap2\n      pop\n        /* \"#utility.yul\":3540:3633   */\n      tag_119\n        /* \"#utility.yul\":3629:3632   */\n      dup3\n        /* \"#utility.yul\":3540:3633   */\n      tag_78\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3658:3660   */\n      0x20\n        /* \"#utility.yul\":3653:3656   */\n      dup3\n        /* \"#utility.yul\":3649:3661   */\n      add\n        /* \"#utility.yul\":3642:3661   */\n      swap1\n      pop\n        /* \"#utility.yul\":3301:3667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3673:4092   */\n    tag_48:\n        /* \"#utility.yul\":3839:3843   */\n      0x00\n        /* \"#utility.yul\":3877:3879   */\n      0x20\n        /* \"#utility.yul\":3866:3875   */\n      dup3\n        /* \"#utility.yul\":3862:3880   */\n      add\n        /* \"#utility.yul\":3854:3880   */\n      swap1\n      pop\n        /* \"#utility.yul\":3926:3935   */\n      dup2\n        /* \"#utility.yul\":3920:3924   */\n      dup2\n        /* \"#utility.yul\":3916:3936   */\n      sub\n        /* \"#utility.yul\":3912:3913   */\n      0x00\n        /* \"#utility.yul\":3901:3910   */\n      dup4\n        /* \"#utility.yul\":3897:3914   */\n      add\n        /* \"#utility.yul\":3890:3937   */\n      mstore\n        /* \"#utility.yul\":3954:4085   */\n      tag_121\n        /* \"#utility.yul\":4080:4084   */\n      dup2\n        /* \"#utility.yul\":3954:4085   */\n      tag_79\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3946:4085   */\n      swap1\n      pop\n        /* \"#utility.yul\":3673:4092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4098:4323   */\n    tag_80:\n        /* \"#utility.yul\":4238:4272   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4234:4235   */\n      0x00\n        /* \"#utility.yul\":4226:4232   */\n      dup3\n        /* \"#utility.yul\":4222:4236   */\n      add\n        /* \"#utility.yul\":4215:4273   */\n      mstore\n        /* \"#utility.yul\":4307:4315   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4302:4304   */\n      0x20\n        /* \"#utility.yul\":4294:4300   */\n      dup3\n        /* \"#utility.yul\":4290:4305   */\n      add\n        /* \"#utility.yul\":4283:4316   */\n      mstore\n        /* \"#utility.yul\":4098:4323   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4329:4695   */\n    tag_81:\n        /* \"#utility.yul\":4471:4474   */\n      0x00\n        /* \"#utility.yul\":4492:4559   */\n      tag_124\n        /* \"#utility.yul\":4556:4558   */\n      0x26\n        /* \"#utility.yul\":4551:4554   */\n      dup4\n        /* \"#utility.yul\":4492:4559   */\n      tag_75\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":4485:4559   */\n      swap2\n      pop\n        /* \"#utility.yul\":4568:4661   */\n      tag_125\n        /* \"#utility.yul\":4657:4660   */\n      dup3\n        /* \"#utility.yul\":4568:4661   */\n      tag_80\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":4686:4688   */\n      0x40\n        /* \"#utility.yul\":4681:4684   */\n      dup3\n        /* \"#utility.yul\":4677:4689   */\n      add\n        /* \"#utility.yul\":4670:4689   */\n      swap1\n      pop\n        /* \"#utility.yul\":4329:4695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4701:5120   */\n    tag_54:\n        /* \"#utility.yul\":4867:4871   */\n      0x00\n        /* \"#utility.yul\":4905:4907   */\n      0x20\n        /* \"#utility.yul\":4894:4903   */\n      dup3\n        /* \"#utility.yul\":4890:4908   */\n      add\n        /* \"#utility.yul\":4882:4908   */\n      swap1\n      pop\n        /* \"#utility.yul\":4954:4963   */\n      dup2\n        /* \"#utility.yul\":4948:4952   */\n      dup2\n        /* \"#utility.yul\":4944:4964   */\n      sub\n        /* \"#utility.yul\":4940:4941   */\n      0x00\n        /* \"#utility.yul\":4929:4938   */\n      dup4\n        /* \"#utility.yul\":4925:4942   */\n      add\n        /* \"#utility.yul\":4918:4965   */\n      mstore\n        /* \"#utility.yul\":4982:5113   */\n      tag_127\n        /* \"#utility.yul\":5108:5112   */\n      dup2\n        /* \"#utility.yul\":4982:5113   */\n      tag_81\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4974:5113   */\n      swap1\n      pop\n        /* \"#utility.yul\":4701:5120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5126:5308   */\n    tag_82:\n        /* \"#utility.yul\":5266:5300   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5262:5263   */\n      0x00\n        /* \"#utility.yul\":5254:5260   */\n      dup3\n        /* \"#utility.yul\":5250:5264   */\n      add\n        /* \"#utility.yul\":5243:5301   */\n      mstore\n        /* \"#utility.yul\":5126:5308   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5314:5680   */\n    tag_83:\n        /* \"#utility.yul\":5456:5459   */\n      0x00\n        /* \"#utility.yul\":5477:5544   */\n      tag_130\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5536:5539   */\n      dup4\n        /* \"#utility.yul\":5477:5544   */\n      tag_75\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5470:5544   */\n      swap2\n      pop\n        /* \"#utility.yul\":5553:5646   */\n      tag_131\n        /* \"#utility.yul\":5642:5645   */\n      dup3\n        /* \"#utility.yul\":5553:5646   */\n      tag_82\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5666:5669   */\n      dup3\n        /* \"#utility.yul\":5662:5674   */\n      add\n        /* \"#utility.yul\":5655:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5314:5680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5686:6105   */\n    tag_62:\n        /* \"#utility.yul\":5852:5856   */\n      0x00\n        /* \"#utility.yul\":5890:5892   */\n      0x20\n        /* \"#utility.yul\":5879:5888   */\n      dup3\n        /* \"#utility.yul\":5875:5893   */\n      add\n        /* \"#utility.yul\":5867:5893   */\n      swap1\n      pop\n        /* \"#utility.yul\":5939:5948   */\n      dup2\n        /* \"#utility.yul\":5933:5937   */\n      dup2\n        /* \"#utility.yul\":5929:5949   */\n      sub\n        /* \"#utility.yul\":5925:5926   */\n      0x00\n        /* \"#utility.yul\":5914:5923   */\n      dup4\n        /* \"#utility.yul\":5910:5927   */\n      add\n        /* \"#utility.yul\":5903:5950   */\n      mstore\n        /* \"#utility.yul\":5967:6098   */\n      tag_133\n        /* \"#utility.yul\":6093:6097   */\n      dup2\n        /* \"#utility.yul\":5967:6098   */\n      tag_83\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":5959:6098   */\n      swap1\n      pop\n        /* \"#utility.yul\":5686:6105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122016ba584918289e1effd6ddb36f3a64d05f35fdb12fe05ba73fdef4b4a920c11d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_110": {
									"entryPoint": null,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_76": {
									"entryPoint": 50,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_198": {
									"entryPoint": 58,
									"id": 198,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6108288061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063537df3b614610067578063715018a6146100835780638da5cb5b1461008d5780639cfe42da146100ab578063f2fde38b146100c7578063fe575a87146100e3575b600080fd5b610081600480360381019061007c919061057e565b610113565b005b61008b610202565b005b610095610216565b6040516100a291906105ba565b60405180910390f35b6100c560048036038101906100c0919061057e565b61023f565b005b6100e160048036038101906100dc919061057e565b61032e565b005b6100fd60048036038101906100f8919061057e565b6103b1565b60405161010a91906105f0565b60405180910390f35b61011b6103d1565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166101a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019e90610668565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61020a6103d1565b610214600061044f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102476103d1565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb906106d4565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6103366103d1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039c90610766565b60405180910390fd5b6103ae8161044f565b50565b60016020528060005260406000206000915054906101000a900460ff1681565b6103d9610513565b73ffffffffffffffffffffffffffffffffffffffff166103f7610216565b73ffffffffffffffffffffffffffffffffffffffff161461044d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610444906107d2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061054b82610520565b9050919050565b61055b81610540565b811461056657600080fd5b50565b60008135905061057881610552565b92915050565b6000602082840312156105945761059361051b565b5b60006105a284828501610569565b91505092915050565b6105b481610540565b82525050565b60006020820190506105cf60008301846105ab565b92915050565b60008115159050919050565b6105ea816105d5565b82525050565b600060208201905061060560008301846105e1565b92915050565b600082825260208201905092915050565b7f4572726f723a205573657220616c72656164792077686974656c697374656400600082015250565b6000610652601f8361060b565b915061065d8261061c565b602082019050919050565b6000602082019050818103600083015261068181610645565b9050919050565b7f4572726f723a205573657220616c726561647920626c61636b6c697374656400600082015250565b60006106be601f8361060b565b91506106c982610688565b602082019050919050565b600060208201905081810360008301526106ed816106b1565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061075060268361060b565b915061075b826106f4565b604082019050919050565b6000602082019050818103600083015261077f81610743565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006107bc60208361060b565b91506107c782610786565b602082019050919050565b600060208201905081810360008301526107eb816107af565b905091905056fea264697066735822122016ba584918289e1effd6ddb36f3a64d05f35fdb12fe05ba73fdef4b4a920c11d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x828 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x9CFE42DA EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8B PUSH2 0x202 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x23F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E SWAP1 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x20A PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x0 PUSH2 0x44F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CB SWAP1 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x336 PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3AE DUP2 PUSH2 0x44F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x513 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3F7 PUSH2 0x216 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x444 SWAP1 PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54B DUP3 PUSH2 0x520 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55B DUP2 PUSH2 0x540 JUMP JUMPDEST DUP2 EQ PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x578 DUP2 PUSH2 0x552 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x594 JUMPI PUSH2 0x593 PUSH2 0x51B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5A2 DUP5 DUP3 DUP6 ADD PUSH2 0x569 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B4 DUP2 PUSH2 0x540 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EA DUP2 PUSH2 0x5D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x605 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F723A205573657220616C72656164792077686974656C697374656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x652 PUSH1 0x1F DUP4 PUSH2 0x60B JUMP JUMPDEST SWAP2 POP PUSH2 0x65D DUP3 PUSH2 0x61C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x681 DUP2 PUSH2 0x645 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F723A205573657220616C726561647920626C61636B6C697374656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BE PUSH1 0x1F DUP4 PUSH2 0x60B JUMP JUMPDEST SWAP2 POP PUSH2 0x6C9 DUP3 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6ED DUP2 PUSH2 0x6B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x750 PUSH1 0x26 DUP4 PUSH2 0x60B JUMP JUMPDEST SWAP2 POP PUSH2 0x75B DUP3 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x77F DUP2 PUSH2 0x743 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BC PUSH1 0x20 DUP4 PUSH2 0x60B JUMP JUMPDEST SWAP2 POP PUSH2 0x7C7 DUP3 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7EB DUP2 PUSH2 0x7AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBA PC 0x49 XOR 0x28 SWAP15 0x1E SELFDESTRUCT 0xD6 0xDD 0xB3 PUSH16 0x3A64D05F35FDB12FE05BA73FDEF4B4A9 KECCAK256 0xC1 SAR PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "93:585:0:-:0;;;;;;;;;;;;;983:32:2;1002:12;:10;;;:12;;:::i;:::-;983:18;;;:32;;:::i;:::-;93:585:0;;657:98:1;710:7;737:10;730:17;;657:98;:::o;2566:191:2:-;2640:16;2659:6;;;;;;;;;;;2640:25;;2685:8;2676:6;;:17;;;;;;;;;;;;;;;;;;2740:8;2709:40;;2730:8;2709:40;;;;;;;;;;;;2629:128;2566:191;:::o;93:585:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_141": {
									"entryPoint": 977,
									"id": 141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_76": {
									"entryPoint": 1299,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_198": {
									"entryPoint": 1103,
									"id": 198,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addBlacklist_30": {
									"entryPoint": 575,
									"id": 30,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isBlacklisted_8": {
									"entryPoint": 945,
									"id": 8,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_127": {
									"entryPoint": 534,
									"id": 127,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromBlacklist_51": {
									"entryPoint": 275,
									"id": 51,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_155": {
									"entryPoint": 514,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_178": {
									"entryPoint": 814,
									"id": 178,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_233dabb05726f4c8e7dd55f9f36f01315b15c15997fedc082dff0f19e43a4782_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8af506b0f57632d55075ba1d1e11d3e36c50f4de7abefee4f12c07a693eb53ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_233dabb05726f4c8e7dd55f9f36f01315b15c15997fedc082dff0f19e43a4782__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8af506b0f57632d55075ba1d1e11d3e36c50f4de7abefee4f12c07a693eb53ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1307,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_233dabb05726f4c8e7dd55f9f36f01315b15c15997fedc082dff0f19e43a4782": {
									"entryPoint": 1672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8af506b0f57632d55075ba1d1e11d3e36c50f4de7abefee4f12c07a693eb53ef": {
									"entryPoint": 1564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6108:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1241:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1229:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1236:3:3",
														"type": ""
													}
												],
												"src": "1176:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1382:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1393:4:3",
														"type": ""
													}
												],
												"src": "1300:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1570:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1580:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1605:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1598:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1598:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1591:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1591:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1580:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1552:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1562:7:3",
														"type": ""
													}
												],
												"src": "1528:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1700:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1720:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1705:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1705:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1693:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1693:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1671:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1678:3:3",
														"type": ""
													}
												],
												"src": "1624:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1831:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1841:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1853:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1864:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1849:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1849:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1841:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1877:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1877:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1803:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1815:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1826:4:3",
														"type": ""
													}
												],
												"src": "1739:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2051:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2068:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2073:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2061:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2061:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2089:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2108:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2113:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2089:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2023:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2028:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2039:11:3",
														"type": ""
													}
												],
												"src": "1955:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2236:75:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2258:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2266:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2254:14:3"
																	},
																	{
																		"hexValue": "4572726f723a205573657220616c72656164792077686974656c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2270:33:3",
																		"type": "",
																		"value": "Error: User already whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2247:57:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2247:57:3"
														}
													]
												},
												"name": "store_literal_in_memory_8af506b0f57632d55075ba1d1e11d3e36c50f4de7abefee4f12c07a693eb53ef",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2228:6:3",
														"type": ""
													}
												],
												"src": "2130:181:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2463:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2473:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2539:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2544:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2480:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2473:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2645:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8af506b0f57632d55075ba1d1e11d3e36c50f4de7abefee4f12c07a693eb53ef",
																	"nodeType": "YulIdentifier",
																	"src": "2556:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2556:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2556:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2658:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2669:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2674:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2665:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2665:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8af506b0f57632d55075ba1d1e11d3e36c50f4de7abefee4f12c07a693eb53ef_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2451:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2459:3:3",
														"type": ""
													}
												],
												"src": "2317:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2860:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2870:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2882:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2893:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2878:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2878:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2870:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2917:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2928:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2913:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2913:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2936:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2942:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2932:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2932:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2906:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2906:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2906:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2962:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3096:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8af506b0f57632d55075ba1d1e11d3e36c50f4de7abefee4f12c07a693eb53ef_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2970:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2962:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8af506b0f57632d55075ba1d1e11d3e36c50f4de7abefee4f12c07a693eb53ef__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2840:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2855:4:3",
														"type": ""
													}
												],
												"src": "2689:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3220:75:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3242:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3250:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3238:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3238:14:3"
																	},
																	{
																		"hexValue": "4572726f723a205573657220616c726561647920626c61636b6c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3254:33:3",
																		"type": "",
																		"value": "Error: User already blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3231:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3231:57:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3231:57:3"
														}
													]
												},
												"name": "store_literal_in_memory_233dabb05726f4c8e7dd55f9f36f01315b15c15997fedc082dff0f19e43a4782",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3212:6:3",
														"type": ""
													}
												],
												"src": "3114:181:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3447:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3457:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3523:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3528:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3464:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3464:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3457:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3629:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_233dabb05726f4c8e7dd55f9f36f01315b15c15997fedc082dff0f19e43a4782",
																	"nodeType": "YulIdentifier",
																	"src": "3540:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3540:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3540:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3642:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3653:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3658:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3649:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3649:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3642:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_233dabb05726f4c8e7dd55f9f36f01315b15c15997fedc082dff0f19e43a4782_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3435:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3443:3:3",
														"type": ""
													}
												],
												"src": "3301:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3844:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3854:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3866:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3877:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3862:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3862:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3854:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3901:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3912:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3897:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3897:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3920:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3926:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3916:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3916:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3890:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3890:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3890:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3946:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4080:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_233dabb05726f4c8e7dd55f9f36f01315b15c15997fedc082dff0f19e43a4782_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3954:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3954:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3946:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_233dabb05726f4c8e7dd55f9f36f01315b15c15997fedc082dff0f19e43a4782__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3824:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3839:4:3",
														"type": ""
													}
												],
												"src": "3673:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4204:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4226:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4234:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4222:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4222:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4238:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4215:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4215:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4215:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4294:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4302:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4290:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4290:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4307:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4283:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4283:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4283:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4196:6:3",
														"type": ""
													}
												],
												"src": "4098:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4475:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4485:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4551:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4556:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4492:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4492:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4485:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4657:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4568:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4568:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4568:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4670:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4681:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4686:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4677:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4677:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4670:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4463:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4471:3:3",
														"type": ""
													}
												],
												"src": "4329:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4872:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4882:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4894:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4905:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4890:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4890:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4882:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4929:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4940:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4925:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4925:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4948:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4954:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4944:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4944:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4918:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4918:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4918:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4974:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5108:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4982:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4982:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4974:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4852:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4867:4:3",
														"type": ""
													}
												],
												"src": "4701:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5232:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5254:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5262:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5250:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5250:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5266:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5243:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5243:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5243:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5224:6:3",
														"type": ""
													}
												],
												"src": "5126:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5460:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5470:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5536:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5477:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5477:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5470:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5642:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5553:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5553:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5553:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5655:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5666:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5662:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5662:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5655:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5448:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5456:3:3",
														"type": ""
													}
												],
												"src": "5314:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5857:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5867:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5879:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5890:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5875:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5875:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5867:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5914:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5925:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5910:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5910:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5933:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5939:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5929:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5929:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5903:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5903:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5903:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5959:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6093:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5967:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5967:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5959:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5837:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5852:4:3",
														"type": ""
													}
												],
												"src": "5686:419:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8af506b0f57632d55075ba1d1e11d3e36c50f4de7abefee4f12c07a693eb53ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: User already whitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_8af506b0f57632d55075ba1d1e11d3e36c50f4de7abefee4f12c07a693eb53ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_8af506b0f57632d55075ba1d1e11d3e36c50f4de7abefee4f12c07a693eb53ef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8af506b0f57632d55075ba1d1e11d3e36c50f4de7abefee4f12c07a693eb53ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8af506b0f57632d55075ba1d1e11d3e36c50f4de7abefee4f12c07a693eb53ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_233dabb05726f4c8e7dd55f9f36f01315b15c15997fedc082dff0f19e43a4782(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: User already blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_233dabb05726f4c8e7dd55f9f36f01315b15c15997fedc082dff0f19e43a4782_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_233dabb05726f4c8e7dd55f9f36f01315b15c15997fedc082dff0f19e43a4782(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_233dabb05726f4c8e7dd55f9f36f01315b15c15997fedc082dff0f19e43a4782__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_233dabb05726f4c8e7dd55f9f36f01315b15c15997fedc082dff0f19e43a4782_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063537df3b614610067578063715018a6146100835780638da5cb5b1461008d5780639cfe42da146100ab578063f2fde38b146100c7578063fe575a87146100e3575b600080fd5b610081600480360381019061007c919061057e565b610113565b005b61008b610202565b005b610095610216565b6040516100a291906105ba565b60405180910390f35b6100c560048036038101906100c0919061057e565b61023f565b005b6100e160048036038101906100dc919061057e565b61032e565b005b6100fd60048036038101906100f8919061057e565b6103b1565b60405161010a91906105f0565b60405180910390f35b61011b6103d1565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166101a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019e90610668565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61020a6103d1565b610214600061044f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102476103d1565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb906106d4565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6103366103d1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039c90610766565b60405180910390fd5b6103ae8161044f565b50565b60016020528060005260406000206000915054906101000a900460ff1681565b6103d9610513565b73ffffffffffffffffffffffffffffffffffffffff166103f7610216565b73ffffffffffffffffffffffffffffffffffffffff161461044d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610444906107d2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061054b82610520565b9050919050565b61055b81610540565b811461056657600080fd5b50565b60008135905061057881610552565b92915050565b6000602082840312156105945761059361051b565b5b60006105a284828501610569565b91505092915050565b6105b481610540565b82525050565b60006020820190506105cf60008301846105ab565b92915050565b60008115159050919050565b6105ea816105d5565b82525050565b600060208201905061060560008301846105e1565b92915050565b600082825260208201905092915050565b7f4572726f723a205573657220616c72656164792077686974656c697374656400600082015250565b6000610652601f8361060b565b915061065d8261061c565b602082019050919050565b6000602082019050818103600083015261068181610645565b9050919050565b7f4572726f723a205573657220616c726561647920626c61636b6c697374656400600082015250565b60006106be601f8361060b565b91506106c982610688565b602082019050919050565b600060208201905081810360008301526106ed816106b1565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061075060268361060b565b915061075b826106f4565b604082019050919050565b6000602082019050818103600083015261077f81610743565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006107bc60208361060b565b91506107c782610786565b602082019050919050565b600060208201905081810360008301526107eb816107af565b905091905056fea264697066735822122016ba584918289e1effd6ddb36f3a64d05f35fdb12fe05ba73fdef4b4a920c11d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x9CFE42DA EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8B PUSH2 0x202 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x23F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E SWAP1 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x20A PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x0 PUSH2 0x44F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CB SWAP1 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x336 PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3AE DUP2 PUSH2 0x44F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x513 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3F7 PUSH2 0x216 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x444 SWAP1 PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54B DUP3 PUSH2 0x520 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55B DUP2 PUSH2 0x540 JUMP JUMPDEST DUP2 EQ PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x578 DUP2 PUSH2 0x552 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x594 JUMPI PUSH2 0x593 PUSH2 0x51B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5A2 DUP5 DUP3 DUP6 ADD PUSH2 0x569 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B4 DUP2 PUSH2 0x540 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EA DUP2 PUSH2 0x5D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x605 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F723A205573657220616C72656164792077686974656C697374656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x652 PUSH1 0x1F DUP4 PUSH2 0x60B JUMP JUMPDEST SWAP2 POP PUSH2 0x65D DUP3 PUSH2 0x61C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x681 DUP2 PUSH2 0x645 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F723A205573657220616C726561647920626C61636B6C697374656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BE PUSH1 0x1F DUP4 PUSH2 0x60B JUMP JUMPDEST SWAP2 POP PUSH2 0x6C9 DUP3 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6ED DUP2 PUSH2 0x6B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x750 PUSH1 0x26 DUP4 PUSH2 0x60B JUMP JUMPDEST SWAP2 POP PUSH2 0x75B DUP3 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x77F DUP2 PUSH2 0x743 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BC PUSH1 0x20 DUP4 PUSH2 0x60B JUMP JUMPDEST SWAP2 POP PUSH2 0x7C7 DUP3 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7EB DUP2 PUSH2 0x7AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBA PC 0x49 XOR 0x28 SWAP15 0x1E SELFDESTRUCT 0xD6 0xDD 0xB3 PUSH16 0x3A64D05F35FDB12FE05BA73FDEF4B4A9 KECCAK256 0xC1 SAR PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "93:585:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;368:183;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1910:103:2;;;:::i;:::-;;1262:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;184:176:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2168:238:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;130:45:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;368:183;1148:13:2;:11;:13::i;:::-;448::0::1;:20;462:5;448:20;;;;;;;;;;;;;;;;;;;;;;;;;440:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;538:5;515:13;:20;529:5;515:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;368:183:::0;:::o;1910:103:2:-;1148:13;:11;:13::i;:::-;1975:30:::1;2002:1;1975:18;:30::i;:::-;1910:103::o:0;1262:87::-;1308:7;1335:6;;;;;;;;;;;1328:13;;1262:87;:::o;184:176:0:-;1148:13:2;:11;:13::i;:::-;258::0::1;:20;272:5;258:20;;;;;;;;;;;;;;;;;;;;;;;;;257:21;249:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;348:4;325:13:::0;:20:::1;339:5;325:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;184:176:::0;:::o;2168:238:2:-;1148:13;:11;:13::i;:::-;2291:1:::1;2271:22;;:8;:22;;::::0;2249:110:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2370:28;2389:8;2370:18;:28::i;:::-;2168:238:::0;:::o;130:45:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;1427:132:2:-;1502:12;:10;:12::i;:::-;1491:23;;:7;:5;:7::i;:::-;:23;;;1483:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1427:132::o;2566:191::-;2640:16;2659:6;;;;;;;;;;;2640:25;;2685:8;2676:6;;:17;;;;;;;;;;;;;;;;;;2740:8;2709:40;;2730:8;2709:40;;;;;;;;;;;;2629:128;2566:191;:::o;657:98:1:-;710:7;737:10;730:17;;657:98;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:90::-;1562:7;1605:5;1598:13;1591:21;1580:32;;1528:90;;;:::o;1624:109::-;1705:21;1720:5;1705:21;:::i;:::-;1700:3;1693:34;1624:109;;:::o;1739:210::-;1826:4;1864:2;1853:9;1849:18;1841:26;;1877:65;1939:1;1928:9;1924:17;1915:6;1877:65;:::i;:::-;1739:210;;;;:::o;1955:169::-;2039:11;2073:6;2068:3;2061:19;2113:4;2108:3;2104:14;2089:29;;1955:169;;;;:::o;2130:181::-;2270:33;2266:1;2258:6;2254:14;2247:57;2130:181;:::o;2317:366::-;2459:3;2480:67;2544:2;2539:3;2480:67;:::i;:::-;2473:74;;2556:93;2645:3;2556:93;:::i;:::-;2674:2;2669:3;2665:12;2658:19;;2317:366;;;:::o;2689:419::-;2855:4;2893:2;2882:9;2878:18;2870:26;;2942:9;2936:4;2932:20;2928:1;2917:9;2913:17;2906:47;2970:131;3096:4;2970:131;:::i;:::-;2962:139;;2689:419;;;:::o;3114:181::-;3254:33;3250:1;3242:6;3238:14;3231:57;3114:181;:::o;3301:366::-;3443:3;3464:67;3528:2;3523:3;3464:67;:::i;:::-;3457:74;;3540:93;3629:3;3540:93;:::i;:::-;3658:2;3653:3;3649:12;3642:19;;3301:366;;;:::o;3673:419::-;3839:4;3877:2;3866:9;3862:18;3854:26;;3926:9;3920:4;3916:20;3912:1;3901:9;3897:17;3890:47;3954:131;4080:4;3954:131;:::i;:::-;3946:139;;3673:419;;;:::o;4098:225::-;4238:34;4234:1;4226:6;4222:14;4215:58;4307:8;4302:2;4294:6;4290:15;4283:33;4098:225;:::o;4329:366::-;4471:3;4492:67;4556:2;4551:3;4492:67;:::i;:::-;4485:74;;4568:93;4657:3;4568:93;:::i;:::-;4686:2;4681:3;4677:12;4670:19;;4329:366;;;:::o;4701:419::-;4867:4;4905:2;4894:9;4890:18;4882:26;;4954:9;4948:4;4944:20;4940:1;4929:9;4925:17;4918:47;4982:131;5108:4;4982:131;:::i;:::-;4974:139;;4701:419;;;:::o;5126:182::-;5266:34;5262:1;5254:6;5250:14;5243:58;5126:182;:::o;5314:366::-;5456:3;5477:67;5541:2;5536:3;5477:67;:::i;:::-;5470:74;;5553:93;5642:3;5553:93;:::i;:::-;5671:2;5666:3;5662:12;5655:19;;5314:366;;;:::o;5686:419::-;5852:4;5890:2;5879:9;5875:18;5867:26;;5939:9;5933:4;5929:20;5925:1;5914:9;5910:17;5903:47;5967:131;6093:4;5967:131;:::i;:::-;5959:139;;5686:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "417600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addBlacklist(address)": "29366",
								"isBlacklisted(address)": "2933",
								"owner()": "2544",
								"removeFromBlacklist(address)": "29297",
								"renounceOwnership()": "30398",
								"transferOwnership(address)": "30810"
							},
							"internal": {
								"isUserBlacklisted(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 678,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 93,
									"end": 678,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 93,
									"end": 678,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 93,
									"end": 678,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 93,
									"end": 678,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 93,
									"end": 678,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 93,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 678,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 93,
									"end": 678,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 678,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 93,
									"end": 678,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 93,
									"end": 678,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 678,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 93,
									"end": 678,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 983,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1002,
									"end": 1014,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1002,
									"end": 1012,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1002,
									"end": 1012,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1002,
									"end": 1012,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1002,
									"end": 1014,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1002,
									"end": 1014,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1002,
									"end": 1014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1002,
									"end": 1014,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1002,
									"end": 1014,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 983,
									"end": 1001,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 983,
									"end": 1001,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 983,
									"end": 1015,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1015,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 983,
									"end": 1015,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 93,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 93,
									"end": 678,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 657,
									"end": 755,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 657,
									"end": 755,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 710,
									"end": 717,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 737,
									"end": 747,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 730,
									"end": 747,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 730,
									"end": 747,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 755,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 755,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2757,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2566,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2640,
									"end": 2656,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2659,
									"end": 2665,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2659,
									"end": 2665,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2659,
									"end": 2665,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2659,
									"end": 2665,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2659,
									"end": 2665,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2659,
									"end": 2665,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2659,
									"end": 2665,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2659,
									"end": 2665,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2659,
									"end": 2665,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 2659,
									"end": 2665,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2659,
									"end": 2665,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2640,
									"end": 2665,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2640,
									"end": 2665,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2685,
									"end": 2693,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2676,
									"end": 2682,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2740,
									"end": 2748,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2709,
									"end": 2749,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2709,
									"end": 2749,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2730,
									"end": 2738,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2709,
									"end": 2749,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2709,
									"end": 2749,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2709,
									"end": 2749,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2709,
									"end": 2749,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2709,
									"end": 2749,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2709,
									"end": 2749,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2709,
									"end": 2749,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2709,
									"end": 2749,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2709,
									"end": 2749,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2709,
									"end": 2749,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2709,
									"end": 2749,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2709,
									"end": 2749,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2629,
									"end": 2757,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2757,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 93,
									"end": 678,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 93,
									"end": 678,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 93,
									"end": 678,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 678,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 93,
									"end": 678,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 678,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 678,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 93,
									"end": 678,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 678,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016ba584918289e1effd6ddb36f3a64d05f35fdb12fe05ba73fdef4b4a920c11d64736f6c63430008110033",
									".code": [
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "537DF3B6"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "9CFE42DA"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "FE575A87"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 678,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 368,
											"end": 551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 368,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 368,
											"end": 551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 368,
											"end": 551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 368,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 368,
											"end": 551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 368,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 368,
											"end": 551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 2013,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1910,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1910,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1910,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2013,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1910,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2013,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1262,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1262,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 184,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 184,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 184,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 360,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 184,
											"end": 360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 184,
											"end": 360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 184,
											"end": 360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 184,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 360,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2168,
											"end": 2406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2168,
											"end": 2406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 130,
											"end": 175,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 130,
											"end": 175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 130,
											"end": 175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 130,
											"end": 175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 368,
											"end": 551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1148,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1148,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 448,
											"end": 461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 467,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 448,
											"end": 468,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 440,
											"end": 504,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 440,
											"end": 504,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 534,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 515,
											"end": 535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 2013,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1910,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1148,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1148,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 2005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1975,
											"end": 2005,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 2005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1315,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 184,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 184,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1148,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1148,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 258,
											"end": 271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 277,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 258,
											"end": 278,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 257,
											"end": 278,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 249,
											"end": 314,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 249,
											"end": 314,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 325,
											"end": 338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 344,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 325,
											"end": 345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 325,
											"end": 352,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1148,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1148,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2291,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2271,
											"end": 2293,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2271,
											"end": 2293,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2293,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2249,
											"end": 2359,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2249,
											"end": 2359,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2389,
											"end": 2397,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2370,
											"end": 2398,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2398,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2370,
											"end": 2398,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 130,
											"end": 175,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 130,
											"end": 175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 130,
											"end": 175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1559,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1427,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1502,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1502,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1514,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1502,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1514,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1491,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1491,
											"end": 1498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1498,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1491,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1514,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1514,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1483,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1483,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2757,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2566,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2749,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2709,
											"end": 2749,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2749,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2709,
											"end": 2749,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2749,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2709,
											"end": 2749,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2749,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2749,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2749,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2749,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2749,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2749,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2749,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2749,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 657,
											"end": 755,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 657,
											"end": 755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 710,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 747,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 730,
											"end": 747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 730,
											"end": 747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 657,
											"end": 755,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 657,
											"end": 755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 1569,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1610,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1611,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1612,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1705,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1703,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1727,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1853,
											"end": 1862,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1867,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1877,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2050,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2071,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2061,
											"end": 2080,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2117,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2111,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2130,
											"end": 2311,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2130,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "4572726F723A205573657220616C72656164792077686974656C697374656400"
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2304,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2130,
											"end": 2311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2130,
											"end": 2311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2683,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2317,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2544,
											"end": 2546,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2539,
											"end": 2542,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2480,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2547,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2480,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2645,
											"end": 2648,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2556,
											"end": 2649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2649,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2556,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2674,
											"end": 2676,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2669,
											"end": 2672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2677,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2658,
											"end": 2677,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2658,
											"end": 2677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2683,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2683,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 3108,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2689,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2895,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2891,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2870,
											"end": 2896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2870,
											"end": 2896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2942,
											"end": 2951,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2936,
											"end": 2940,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2932,
											"end": 2952,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2929,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2926,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2906,
											"end": 2953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3096,
											"end": 3100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2970,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2970,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 3101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 3108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 3108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 3108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 3108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3295,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3114,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3254,
											"end": 3287,
											"name": "PUSH",
											"source": 3,
											"value": "4572726F723A205573657220616C726561647920626C61636B6C697374656400"
										},
										{
											"begin": 3250,
											"end": 3251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3248,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3252,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3231,
											"end": 3288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3667,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3301,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3443,
											"end": 3446,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3528,
											"end": 3530,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3523,
											"end": 3526,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3464,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3531,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3464,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3457,
											"end": 3531,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3457,
											"end": 3531,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3540,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3629,
											"end": 3632,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3540,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3540,
											"end": 3633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3540,
											"end": 3633,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3540,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3658,
											"end": 3660,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3656,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3649,
											"end": 3661,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3642,
											"end": 3661,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3642,
											"end": 3661,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3667,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3673,
											"end": 4092,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3673,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3839,
											"end": 3843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3866,
											"end": 3875,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3854,
											"end": 3880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3854,
											"end": 3880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3935,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3924,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 3936,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3912,
											"end": 3913,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3910,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3937,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3954,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4080,
											"end": 4084,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3954,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3954,
											"end": 4085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3954,
											"end": 4085,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3954,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3946,
											"end": 4085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3946,
											"end": 4085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3673,
											"end": 4092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3673,
											"end": 4092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3673,
											"end": 4092,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3673,
											"end": 4092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4323,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4098,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4272,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4234,
											"end": 4235,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4236,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4215,
											"end": 4273,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4307,
											"end": 4315,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4302,
											"end": 4304,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4283,
											"end": 4316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4323,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4329,
											"end": 4695,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4329,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4471,
											"end": 4474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4556,
											"end": 4558,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4551,
											"end": 4554,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4492,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4559,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4492,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4568,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4657,
											"end": 4660,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4568,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4568,
											"end": 4661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4568,
											"end": 4661,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4568,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4681,
											"end": 4684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4677,
											"end": 4689,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4670,
											"end": 4689,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4670,
											"end": 4689,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4329,
											"end": 4695,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4329,
											"end": 4695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4329,
											"end": 4695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4329,
											"end": 4695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4701,
											"end": 5120,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4701,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4871,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4905,
											"end": 4907,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4894,
											"end": 4903,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4882,
											"end": 4908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4882,
											"end": 4908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 4952,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4944,
											"end": 4964,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4940,
											"end": 4941,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4929,
											"end": 4938,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 4942,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 4965,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5108,
											"end": 5112,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4982,
											"end": 5113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 5113,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4982,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4974,
											"end": 5113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4974,
											"end": 5113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4701,
											"end": 5120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4701,
											"end": 5120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4701,
											"end": 5120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4701,
											"end": 5120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5308,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 5126,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5266,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5262,
											"end": 5263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5260,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5250,
											"end": 5264,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5243,
											"end": 5301,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5456,
											"end": 5459,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5536,
											"end": 5539,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5477,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5477,
											"end": 5544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5477,
											"end": 5544,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5477,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5470,
											"end": 5544,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5470,
											"end": 5544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5553,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5642,
											"end": 5645,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5553,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 5553,
											"end": 5646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5553,
											"end": 5646,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5553,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5674,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5314,
											"end": 5680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 6105,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5686,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5852,
											"end": 5856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5879,
											"end": 5888,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5867,
											"end": 5893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5867,
											"end": 5893,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5948,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5929,
											"end": 5949,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5926,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5923,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5903,
											"end": 5950,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5967,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 6093,
											"end": 6097,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5967,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 5967,
											"end": 6098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5967,
											"end": 6098,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5967,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5959,
											"end": 6098,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5959,
											"end": 6098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 6105,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 6105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 6105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 6105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/Blacklist.sol",
								"contracts/utils/Context.sol",
								"contracts/utils/Ownable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addBlacklist(address)": "9cfe42da",
							"isBlacklisted(address)": "fe575a87",
							"owner()": "8da5cb5b",
							"removeFromBlacklist(address)": "537df3b6",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"addBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Blacklist.sol\":\"Blacklist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Blacklist.sol\":{\"keccak256\":\"0xf841dbe2f99a2a7e447cc7d6901d53e9e0d57fc3e02f1d63eadcc37611da0736\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f4c6f3c9249810121263b614721327251696cc7fb5a5cb39841e88f7064a933\",\"dweb:/ipfs/QmT8LmzbFvVC77K6tUSLabTd5NSeMAqZ7h9PBkpFJTeMw9\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xabb410cd2a049f452d42e4198ad04cbd65359fbc46d0cda788bafdeb7752fadc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ad287f93359a323039a0b23efd74714c597bc13af362515746c347f559dc3b9\",\"dweb:/ipfs/QmbX9yDbNH5vDnsKonxLrS9rC3mySdKBRK9HFmGrEe7nxB\"]},\"contracts/utils/Ownable.sol\":{\"keccak256\":\"0xf2ced77777e73f99b2361e4143012ce902aecb8a81fb48cd798524472a973701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://240a9fed0d7239c958ecb7af3b0a6a4e7654d57b249f0da489572d008929a8b9\",\"dweb:/ipfs/QmeZ2TEM3xcNGM6Wp7DyiRnMrSwTLbajtRJ4Cihts8f9wH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 94,
								"contract": "contracts/Blacklist.sol:Blacklist",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 8,
								"contract": "contracts/Blacklist.sol:Blacklist",
								"label": "isBlacklisted",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0xabb410cd2a049f452d42e4198ad04cbd65359fbc46d0cda788bafdeb7752fadc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ad287f93359a323039a0b23efd74714c597bc13af362515746c347f559dc3b9\",\"dweb:/ipfs/QmbX9yDbNH5vDnsKonxLrS9rC3mySdKBRK9HFmGrEe7nxB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0xabb410cd2a049f452d42e4198ad04cbd65359fbc46d0cda788bafdeb7752fadc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ad287f93359a323039a0b23efd74714c597bc13af362515746c347f559dc3b9\",\"dweb:/ipfs/QmbX9yDbNH5vDnsKonxLrS9rC3mySdKBRK9HFmGrEe7nxB\"]},\"contracts/utils/Ownable.sol\":{\"keccak256\":\"0xf2ced77777e73f99b2361e4143012ce902aecb8a81fb48cd798524472a973701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://240a9fed0d7239c958ecb7af3b0a6a4e7654d57b249f0da489572d008929a8b9\",\"dweb:/ipfs/QmeZ2TEM3xcNGM6Wp7DyiRnMrSwTLbajtRJ4Cihts8f9wH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 94,
								"contract": "contracts/utils/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Blacklist.sol": {
				"ast": {
					"absolutePath": "contracts/Blacklist.sol",
					"exportedSymbols": {
						"Blacklist": [
							64
						],
						"Context": [
							86
						],
						"Ownable": [
							199
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "34:24:0"
						},
						{
							"absolutePath": "contracts/utils/Ownable.sol",
							"file": "./utils/Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 65,
							"sourceUnit": 200,
							"src": "60:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "Ownable",
										"nameLocations": [
											"115:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 199,
										"src": "115:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "115:7:0"
								}
							],
							"canonicalName": "Blacklist",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64,
								199,
								86
							],
							"name": "Blacklist",
							"nameLocation": "102:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fe575a87",
									"id": 8,
									"mutability": "mutable",
									"name": "isBlacklisted",
									"nameLocation": "162:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "130:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 7,
										"keyType": {
											"id": 5,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "138:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "130:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 6,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "149:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "238:122:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "257:21:0",
															"subExpression": {
																"baseExpression": {
																	"id": 16,
																	"name": "isBlacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "258:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 18,
																"indexExpression": {
																	"id": 17,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "272:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "258:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a205573657220616c726561647920626c61636b6c6973746564",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "280:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_233dabb05726f4c8e7dd55f9f36f01315b15c15997fedc082dff0f19e43a4782",
																"typeString": "literal_string \"Error: User already blacklisted\""
															},
															"value": "Error: User already blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_233dabb05726f4c8e7dd55f9f36f01315b15c15997fedc082dff0f19e43a4782",
																"typeString": "literal_string \"Error: User already blacklisted\""
															}
														],
														"id": 15,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "249:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "249:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "249:65:0"
											},
											{
												"expression": {
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 23,
															"name": "isBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "325:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 25,
														"indexExpression": {
															"id": 24,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "339:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "325:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "348:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "325:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "325:27:0"
											}
										]
									},
									"functionSelector": "9cfe42da",
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 13,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 12,
												"name": "onlyOwner",
												"nameLocations": [
													"228:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "228:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "228:9:0"
										}
									],
									"name": "addBlacklist",
									"nameLocation": "193:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "214:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "206:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:15:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "238:0:0"
									},
									"scope": 64,
									"src": "184:176:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "429:122:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 38,
																"name": "isBlacklisted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "448:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 40,
															"indexExpression": {
																"id": 39,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "462:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "448:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a205573657220616c72656164792077686974656c6973746564",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "470:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8af506b0f57632d55075ba1d1e11d3e36c50f4de7abefee4f12c07a693eb53ef",
																"typeString": "literal_string \"Error: User already whitelisted\""
															},
															"value": "Error: User already whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8af506b0f57632d55075ba1d1e11d3e36c50f4de7abefee4f12c07a693eb53ef",
																"typeString": "literal_string \"Error: User already whitelisted\""
															}
														],
														"id": 37,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "440:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "440:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "440:64:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 44,
															"name": "isBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "515:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 46,
														"indexExpression": {
															"id": 45,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "529:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "515:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "538:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "515:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "515:28:0"
											}
										]
									},
									"functionSelector": "537df3b6",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 35,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 34,
												"name": "onlyOwner",
												"nameLocations": [
													"419:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "419:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "419:9:0"
										}
									],
									"name": "removeFromBlacklist",
									"nameLocation": "377:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "405:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "397:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:15:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:0:0"
									},
									"scope": 64,
									"src": "368:183:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "629:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 58,
														"name": "isBlacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "647:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 60,
													"indexExpression": {
														"id": 59,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "661:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "647:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "640:27:0"
											}
										]
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUserBlacklisted",
									"nameLocation": "568:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "594:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "586:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:15:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "623:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "623:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:6:0"
									},
									"scope": 64,
									"src": "559:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 65,
							"src": "93:585:0",
							"usedErrors": []
						}
					],
					"src": "34:646:0"
				},
				"id": 0
			},
			"contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							86
						]
					},
					"id": 87,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "89:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "117:505:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 86,
							"linearizedBaseContracts": [
								86
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "719:36:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 72,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "737:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "741:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "737:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 71,
												"id": 74,
												"nodeType": "Return",
												"src": "730:17:1"
											}
										]
									},
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "666:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "676:2:1"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "710:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:9:1"
									},
									"scope": 86,
									"src": "657:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "830:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 81,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "848:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "852:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "848:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 80,
												"id": 83,
												"nodeType": "Return",
												"src": "841:15:1"
											}
										]
									},
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "772:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:2:1"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "814:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "814:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "813:16:1"
									},
									"scope": 86,
									"src": "763:101:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 87,
							"src": "624:243:1",
							"usedErrors": []
						}
					],
					"src": "89:780:1"
				},
				"id": 1
			},
			"contracts/utils/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							86
						],
						"Ownable": [
							199
						]
					},
					"id": 200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 88,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "./Context.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 200,
							"sourceUnit": 87,
							"src": "133:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 91,
										"name": "Context",
										"nameLocations": [
											"696:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 86,
										"src": "696:7:2"
									},
									"id": 92,
									"nodeType": "InheritanceSpecifier",
									"src": "696:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "160:505:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 199,
							"linearizedBaseContracts": [
								199,
								86
							],
							"name": "Ownable",
							"nameLocation": "685:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 94,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "727:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "711:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 93,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "711:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 100,
									"name": "OwnershipTransferred",
									"nameLocation": "748:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "795:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "779:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "835:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "819:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:82:2"
									},
									"src": "742:109:2"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "972:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 105,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "1002:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1002:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 104,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "983:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "983:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "983:32:2"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "859:93:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 110,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:2"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "972:0:2"
									},
									"scope": 199,
									"src": "958:65:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "1137:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 113,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "1148:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1148:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1148:13:2"
											},
											{
												"id": 116,
												"nodeType": "PlaceholderStatement",
												"src": "1172:1:2"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "1031:79:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 118,
									"name": "onlyOwner",
									"nameLocation": "1125:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1134:2:2"
									},
									"src": "1116:65:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "1317:32:2",
										"statements": [
											{
												"expression": {
													"id": 124,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "1335:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 123,
												"id": 125,
												"nodeType": "Return",
												"src": "1328:13:2"
											}
										]
									},
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "1189:67:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1271:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1276:2:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1308:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:9:2"
									},
									"scope": 199,
									"src": "1262:87:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1472:87:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 132,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "1491:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1491:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 134,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "1502:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1502:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1491:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1516:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1483:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1483:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "1483:68:2"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "1357:64:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1436:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1447:2:2"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1472:0:2"
									},
									"scope": 199,
									"src": "1427:132:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1964:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2002:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1994:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 148,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1994:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1994:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 147,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "1975:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1975:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1975:30:2"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "1567:337:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 145,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 144,
												"name": "onlyOwner",
												"nameLocations": [
													"1954:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "1954:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1954:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1919:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1936:2:2"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1964:0:2"
									},
									"scope": 199,
									"src": "1910:103:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "2238:168:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 164,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2271:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2291:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2283:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 165,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2283:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2283:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2271:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2308:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2249:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:110:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "2249:110:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 174,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "2389:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 173,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "2370:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "2370:28:2"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2021:141:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 161,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 160,
												"name": "onlyOwner",
												"nameLocations": [
													"2228:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "2228:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2228:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2177:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2203:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "2195:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:18:2"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2238:0:2"
									},
									"scope": 199,
									"src": "2168:238:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "2629:128:2",
										"statements": [
											{
												"assignments": [
													185
												],
												"declarations": [
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2648:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 197,
														"src": "2640:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 184,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2640:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 187,
												"initialValue": {
													"id": 186,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "2659:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2640:25:2"
											},
											{
												"expression": {
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 188,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2676:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 189,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "2685:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2676:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "2676:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 193,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2730:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 194,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2740:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 192,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2709:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2709:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "EmitStatement",
												"src": "2704:45:2"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "2414:146:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2575:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2602:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "2594:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2594:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2593:18:2"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2629:0:2"
									},
									"scope": 199,
									"src": "2566:191:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 200,
							"src": "667:2093:2",
							"usedErrors": []
						}
					],
					"src": "105:2657:2"
				},
				"id": 2
			}
		}
	}
}